// <auto-generated />
using System;
using DocumentRetentionAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DocumentRetentionAPI.Migrations
{
    [DbContext(typeof(DRDBContext))]
    [Migration("20211004172150_ChangeColumnNames")]
    partial class ChangeColumnNames
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DocumentRetentionAPI.Models.Clients", b =>
                {
                    b.Property<int>("IDClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ClientCreationAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("ClientUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreationUser")
                        .HasColumnType("bigint");

                    b.HasKey("IDClient");

                    b.HasIndex("CreationUser");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.DocType", b =>
                {
                    b.Property<int>("IDDT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreationUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DTCreationAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DTName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DTUpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IDDT");

                    b.HasIndex("CreationUser");

                    b.ToTable("DocType");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Documents", b =>
                {
                    b.Property<int>("IDDocument")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreationUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DocumentCreationAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocumentDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DocumentStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DocumentStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DocumentUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDDT")
                        .HasColumnType("int");

                    b.Property<int>("IDProcess")
                        .HasColumnType("int");

                    b.Property<int>("IDProject")
                        .HasColumnType("int");

                    b.HasKey("IDDocument");

                    b.HasIndex("CreationUser");

                    b.HasIndex("IDDT");

                    b.HasIndex("IDProcess");

                    b.HasIndex("IDProject");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Processes", b =>
                {
                    b.Property<int>("IDProcess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreationUser")
                        .HasColumnType("bigint");

                    b.Property<long>("IDOwner")
                        .HasColumnType("bigint");

                    b.Property<string>("NameOwner")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("ProcessCreationAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("ProcessStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ProcessUpdaeAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IDProcess");

                    b.HasIndex("CreationUser");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Projects", b =>
                {
                    b.Property<int>("IDProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreationUser")
                        .HasColumnType("bigint");

                    b.Property<int>("IDClient")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProjecUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProjectCreationAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("ProjectStatus")
                        .HasColumnType("bit");

                    b.HasKey("IDProject");

                    b.HasIndex("CreationUser");

                    b.HasIndex("IDClient");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Roles", b =>
                {
                    b.Property<int>("IDRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IDRole");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Users", b =>
                {
                    b.Property<long>("IDUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDRole")
                        .HasColumnType("int");

                    b.Property<string>("UID")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("UserCreationAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<bool>("UserStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UserUpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IDUser");

                    b.HasIndex("IDRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Clients", b =>
                {
                    b.HasOne("DocumentRetentionAPI.Models.Users", "user")
                        .WithMany("client")
                        .HasForeignKey("CreationUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.DocType", b =>
                {
                    b.HasOne("DocumentRetentionAPI.Models.Users", "user")
                        .WithMany("docType")
                        .HasForeignKey("CreationUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Documents", b =>
                {
                    b.HasOne("DocumentRetentionAPI.Models.Users", "user")
                        .WithMany("document")
                        .HasForeignKey("CreationUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DocumentRetentionAPI.Models.DocType", "docType")
                        .WithMany("document")
                        .HasForeignKey("IDDT")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DocumentRetentionAPI.Models.Processes", "process")
                        .WithMany("document")
                        .HasForeignKey("IDProcess")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DocumentRetentionAPI.Models.Projects", "project")
                        .WithMany("document")
                        .HasForeignKey("IDProject")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("docType");

                    b.Navigation("process");

                    b.Navigation("project");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Processes", b =>
                {
                    b.HasOne("DocumentRetentionAPI.Models.Users", "user")
                        .WithMany("process")
                        .HasForeignKey("CreationUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Projects", b =>
                {
                    b.HasOne("DocumentRetentionAPI.Models.Users", "user")
                        .WithMany("project")
                        .HasForeignKey("CreationUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DocumentRetentionAPI.Models.Clients", "client")
                        .WithMany("project")
                        .HasForeignKey("IDClient")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("client");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Users", b =>
                {
                    b.HasOne("DocumentRetentionAPI.Models.Roles", "role")
                        .WithMany("user")
                        .HasForeignKey("IDRole")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Clients", b =>
                {
                    b.Navigation("project");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.DocType", b =>
                {
                    b.Navigation("document");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Processes", b =>
                {
                    b.Navigation("document");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Projects", b =>
                {
                    b.Navigation("document");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Roles", b =>
                {
                    b.Navigation("user");
                });

            modelBuilder.Entity("DocumentRetentionAPI.Models.Users", b =>
                {
                    b.Navigation("client");

                    b.Navigation("docType");

                    b.Navigation("document");

                    b.Navigation("process");

                    b.Navigation("project");
                });
#pragma warning restore 612, 618
        }
    }
}
